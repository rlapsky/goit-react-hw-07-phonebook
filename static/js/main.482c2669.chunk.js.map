{"version":3,"sources":["redux/actions.js","redux/operations.js","redux/selectors.js","component/contsctList/ContactList.jsx","component/form/Form.jsx","component/filter/Filter.jsx","component/App.js","redux/reducer.js","redux/store.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","delContactRequest","delContactSuccess","delContactError","filterContact","axios","defaults","baseURL","name","number","dispatch","contact","actions","post","then","data","catch","error","contactId","delete","a","get","console","log","filterValue","state","contacts","filter","getFilterContact","createSelector","items","toLocaleLowerCase","includes","connect","selectors","deleteContact","id","operations","map","onClick","Form","inputHandler","e","target","value","setState","submitHandler","preventDefault","props","addContact","this","fetchContacts","onSubmit","onChange","type","pattern","title","required","Component","contactSelectors","filterHandler","App","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","loger","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.482c2669.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst fetchContactRequest = createAction(\"state/fetchContactsRequest\");\r\nconst fetchContactSuccess = createAction(\"state/fetchContactsSuccess\");\r\nconst fetchContactError = createAction(\"state/fetchContactsError\");\r\n\r\nconst addContactRequest = createAction(\"phoneBook/addContactsRequest\");\r\nconst addContactSuccess = createAction(\"phoneBook/addContactsSuccess\");\r\nconst addContactError = createAction(\"phoneBook/addContactsError\");\r\n\r\nconst delContactRequest = createAction(\"phoneBook/delContactsRequest\");\r\nconst delContactSuccess = createAction(\"phoneBook/delContactsSuccess\");\r\nconst delContactError = createAction(\"phoneBook/delContactsError\");\r\n\r\nconst filterContact = createAction(\"phoneBook/filter\");\r\n\r\nexport default {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  filterContact,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  delContactRequest,\r\n  delContactSuccess,\r\n  delContactError,\r\n};\r\n","import axios from \"axios\";\r\nimport actions from \"../redux/actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(actions.fetchContactRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    console.log(data);\r\n    dispatch(actions.fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.fetchContactError(error));\r\n  }\r\n};\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  (dispatch) => {\r\n    const contact = { name, number };\r\n\r\n    dispatch(actions.addContactRequest());\r\n\r\n    axios\r\n      .post(\"/contacts\", contact)\r\n      .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n      .catch((error) => dispatch(actions.addContactError(error)));\r\n  };\r\n\r\nconst delContact = (contactId) => (dispatch) => {\r\n  dispatch(actions.delContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(actions.delContactSuccess(contactId)))\r\n    .catch((error) => dispatch(actions.delContactError(error)));\r\n};\r\n\r\nexport default { addContact, delContact, fetchContacts };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst filterValue = (state) => state.contacts.filter;\r\n\r\nconst getAllcontacts = (state) => state.contacts.items;\r\n\r\n// const getFilterContact = (state) => {\r\n//   const filter = filterValue(state);\r\n//   const contacts = getAllcontacts(state);\r\n//   return contacts.filter((contact) =>\r\n//     contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\r\n//   );\r\n// };\r\n\r\nconst getFilterContact = createSelector(\r\n  [getAllcontacts, filterValue],\r\n  (contacts, filter) => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  filterValue,\r\n  getFilterContact,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport operations from '../../redux/operations';\r\nimport selectors from \"../../redux/selectors\"\r\n\r\nconst ContactList = ({contacts, deleteContact}) => {\r\n    return (\r\n        <ul>\r\n            {contacts.map(({id, name, number}) =>\r\n                <li key={id}>\r\n                    <p>{name}:{number}</p>\r\n                    <button id={id} onClick={()=>deleteContact(id)}>Delete</button>\r\n                </li>)}\r\n        </ul>\r\n    );\r\n}\r\n\r\n\r\n \r\n\r\n\r\nconst mapStateToProps = ( state) => ({\r\n    \r\n    contacts: selectors.getFilterContact(state)\r\n\r\n  \r\n})  \r\n\r\nconst mapDispatchToProps = dispatch=>({\r\n    deleteContact: id => dispatch(operations.delContact(id)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport operations from '../../redux/operations'\r\n\r\n\r\n class Form extends Component {\r\n    state = {\r\n         name: \"\",\r\n        number: \"\",\r\n    }\r\n\r\n   \r\n   \r\n    inputHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n    submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.props.addContact(this.state)\r\n   };\r\n   \r\n   componentDidMount() {\r\n     this.props.fetchContacts()\r\n   }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n           <form onSubmit={this.submitHandler}>\r\n          <label>Name<input\r\n            onChange={this.inputHandler}\r\n            type=\"text\"\r\n              name=\"name\"\r\n              \r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            /></label>\r\n            \r\n            <label>Tel\r\n             \r\n          <input\r\n            onChange={this.inputHandler}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          /></label>\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\n const mapDispatchToProps = dispatch => ({\r\n   addContact: contact => dispatch(operations.addContact(contact)),\r\n   fetchContacts: ()=>dispatch(operations.fetchContacts())\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(Form);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport actions from '../../redux/actions'\r\nimport contactSelectors from \"../../redux/selectors\"\r\n\r\n\r\n function Filter({filterHandler,filter}) {\r\n    return (\r\n        <label>find\r\n        <input\r\n            value = {filter}\r\n            onChange={filterHandler} />\r\n        </label>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    value: contactSelectors.filterValue(state)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    filterHandler: (e) => dispatch(actions.filterContact(e.target.value))\r\n    \r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps )(Filter) ","import React, { Component } from \"react\";\r\nimport ContactList from \"./contsctList/ContactList\";\r\nimport Form from \"./form/Form\";\r\nimport Filter from \"./filter/Filter\";\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <Form />\r\n        <h2>Contacts</h2>\r\n\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./actions\";\r\n\r\nconst {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  delContactRequest,\r\n  delContactSuccess,\r\n  delContactError,\r\n  filterContact,\r\n} = actions;\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [delContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport loger from \"redux-logger\";\r\nimport reducer from \"./reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  loger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: reducer,\r\n  },\r\n  middleware,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./component/App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}